(function() { var t, e, n, o, i, r, a, l, s, c, d, u, h, p, f, m, g, v, y, w, b, x, M, I, F, S, k, P, C, T, G, X, z, A, N, R, O, W, j, D, q, Y, Z, H, J, U, E, V, B, K, Q, tt, et, nt, ot, it, rt, at, lt, st, ct, dt, ut, ht, pt, ft, mt = [].indexOf || function(t) { for (var e = 0, n = this.length; e < n; e++)
            if (e in this && this[e] === t) return e; return -1 };
    ot = null, h = null, T = null, z = 0, X = 0, l = [0, 0], d = [], i = 16607108, K = new PIXI.CanvasRenderer(document.body.clientWidth, document.body.clientHeight, { antialias: !0, transparent: !0, autoResize: !0, resolution: 1 }), et = new PIXI.Container, Z = new PIXI.Graphics, et.interactive = !1, et.addChild(Z), ut = [], Q = void 0, at = d3.hcl("#D9FF8A"), f = d3.hcl("#32dbe0"), w = d3.interpolateLab(d3.interpolateLab(at, f)(.5), "#FFF")(.5), m = d3.interpolateLab(w, f), lt = d3.interpolateLab(w, at), s = d3.scale.quantize().domain([0, .75]).range([.25, .5, .75, 1]), $(function() { return $(window).on("resize", function() { var t; return K.resize(document.body.clientWidth, document.body.clientHeight), t = Math.min(1, document.body.clientWidth / 1180), $("#details .container").css("zoom", 100 * t + "%"), $("#details").css("height", 260 * t), d3.select("#skill .help-spot").classed("jump-left", t < 1) }), $("body").addClass("loading"), d3.json("data/config.json", function(t) { var e, n; return window.CONFIG = t, l = function() { n = []; for (var t = e = window.CONFIG.years[0], o = window.CONFIG.years[1]; e <= o ? t <= o : t >= o; e <= o ? t++ : t--) n.push(t); return n }.apply(this), $("#prediction-start-date").html(t.predictionStartDate), $("#prediction-season").html(t.predictionSeason), $("#prediction-system").html(t.predictionSystem), d3.tsv("data/csv/globalstats.csv", function(e) { var n, o, i, r; for (h = e, T = new G.Map("map", "moritzstefaner.7ff13712", { center: [7.38, -69.61], zoom: 5, zoomControl: !0, minZoom: 4, maxZoom: 6, continuousWorld: !0 }), $("body").append($(".leaflet-control-container").detach()), n = 0, o = h.length; n < o; n++) t = h[n], t.lat = N(+t.lat), t.lon = R(+t.lon), t.RPSS = +t.rpss, t.meanHistoric = +t.meanHistoric, t.meanPrediction = +t.meanPrediction, t.lat || console.log(t), t.loc = new G.LatLng(t.lat, t.lon), t.ocean = t.ocean > 0, null == d[i = +t.lonSlice] && (d[i] = []), d[+t.lonSlice].push(t), t.power && (X = Math.max(t.power, X)); return z = d3.max(function() { var t, e, n; for (n = [], e = 0, t = h.length; e < t; e++) r = h[e], n.push(r.RPSS); return n }()), $("body").removeClass("loading"), console.log("data ready"), I(), U(), T.on("render move zoomstart zoomend", _.throttle(U, 50)) }) }) }), I = function() { return console.log("init"), F(), S(), d3.select("body").append("div.pixi").node().appendChild(K.view), k(), J() }, nt = {}, W = function(t, e) { var n; return nt = { x: t, y: e }, n = (new Date).getTime(), x() }, j = function(t, e) { var n, o; return n = g(t, e), null == n ? void x() : (o = Math.sqrt((t - n.point.x) * (t - n.point.x) + (e - n.point.y) * (e - n.point.y)), o < 10 ? (d3.select("#map").style("cursor", "pointer"), tt("Click to see details about this region.", 1500, 5e3)) : (d3.select("#map").style("cursor", "move"), tt("The skill value is insufficient for a prediction in this area.", 1500, 5e3))) }, q = function(t, e) { var n, o, i; if (o = Math.abs(nt.x - t) + Math.abs(nt.y - e), !(o > 100)) { if (n = g(t, e), null == n) return void x(); if (o = Math.sqrt((t - n.point.x) * (t - n.point.x) + (e - n.point.y) * (e - n.point.y)), !(o >= 10)) return Q = null != n ? n.data.cellID : void 0, x(), U(), i = window.CONFIG.jsonPath + "/" + n.data.cellID + ".json", n ? d3.json(i, function(t, e) { return null != e ? E(n.data, n.point, e) : console.warn("error loading data", i) }) : void 0 } }, d3.select("#map").on("mousedown", function(t) { var e; return e = d3.event, W(e.x || e.clientX, e.y || e.clientY) }), P = 0, C = 0, d3.select("#map").on("touchstart", function(t) { var e, n, o; return e = d3.event.touches[0], n = e.x || e.clientX, o = e.y || e.clientY, P = n, C = o, W(n, o) }), d3.select("#map").on("mouseout", function(t) { return x() }), d3.select("#map").on("mouseup", function(t) { var e; return e = d3.event, q(e.x || e.clientX, e.y || e.clientY) }), d3.select("#map").on("touchend", function(t) { return q(P, C) }), A = null, d3.select("#map").on("mousemove", function(t) { var e; return e = d3.event, j(e.x || e.clientX, e.y || e.clientY) }), d3.select("#map").on("touchmove", function(t) { var e, n, o; return e = d3.event.touches[0], n = e.x || e.clientX, o = e.y || e.clientY, P = n, C = o, j(n, o) }), S = function() { var t; return t = d3.selectAll(".map-legend div canvas").each(function(t, e) { var n, o, i, r, a, l, s, c, d, u, h, p, f, m, g, v; if (n = d3.select(this).node(), a = new PIXI.CanvasRenderer(60, 100, { antialias: !0, transparent: !0, view: n, resolution: 1 }), r = new PIXI.Graphics, l = new PIXI.Container, l.interactive = !1, l.addChild(r), 0 === e)
                for (g = 10, f = 4, m = 10, e = o = 0, d = f - 1; 0 <= d ? o <= d : o >= d; e = 0 <= d ? ++o : --o) V(r, m - 30, g + 20 * (f - e - 1), .01 + e / (f - 1) * z, 0, 3, 50, !0); if (1 === e)
                for (m = 20, g = 20, f = 4, e = i = 0, u = f; 0 <= u ? i <= u : i >= u; e = 0 <= u ? ++i : --i) V(r, m - 5, g + 16 * (f - e) - 10, z, 0, .5 + 1.5 * e, 15, !0); if (2 === e)
                for (m = 13, g = 23, f = 4, e = s = 0, h = f; 0 <= h ? s <= h : s >= h; e = 0 <= h ? ++s : --s) V(r, m, g + 15 * (f - 1 - e), z, .06 * (e - f / 2), 4, 9); if (3 === e)
                for (m = 20, g = 20, f = 2, e = c = 0, p = f; 0 <= p ? c <= p : c >= p; e = 0 <= p ? ++c : --c) v = g + 26 * (f - e), B(r, m, v, [2e5, 5e5, 1e6][e], 10); return a.render(l) }) }, d3.select("#details .close.button").on("click", function() { return Q = void 0, E(), U(), !1 }), O = void 0, c = function(t) { return t.getWest() + ", " + t.getSouth() + ", " + t.getEast() + ", " + t.getNorth() }, u = !1, U = function() { var t, e, n, o, a, l, s, d, h, p, f, m; for (Z.clear(), t = T.getBounds(), m = T.getZoom(), r.high_contrast !== u && (d = r.high_contrast ? .15 : .6, u = r.high_contrast, d3.select("#map-overlay-bg").transition().style("opacity", d)), $("#start-year").text(window.CONFIG.years[0]), $("#end-year").text(window.CONFIG.years[1]), $("#prediction-time").text(window.CONFIG.predictionSeason), l = 450 * Math.pow(m / 20, 3), O !== c(t) && (ut = v(t), O = c(t)), a = 0, s = ut.length; a < s; a++) e = ut[a], o = e.data, h = e.point, o.cellID === Q && (Z.moveTo(h.x, h.y), Z.beginFill(i, .5), Z.drawCircle(h.x, h.y, 2 * l), Z.endFill()), o.power > 0 && r.show_windpower && B(Z, h.x, h.y, o.power, l), n = Math.log(o.meanPrediction / o.meanHistoric), p = Math.max(0, o.RPSS / z) || 0, f = o.meanPrediction, r.mask_oceans && !o.ocean || V(Z, h.x, h.y, p, n, f, l); return K.render(et) }, G = L.mapbox, G.LatLng = L.LatLng, G.accessToken = "pk.eyJ1IjoibW9yaXR6c3RlZmFuZXIiLCJhIjoiUGs4LU1VZyJ9.oJh_Gi3geralmUvrJVWYaA", t = "https://starling.columba.uberspace.de/couchdb", n = "euporias", $.couch.urlPrefix = t, e = $.couch.db(n), M = void 0, H = void 0, ft = void 0, a = 450, o = 200, ht = d3.svg.axis().tickSize(-750).ticks(4).orient("left").tickFormat(d3.format(".1f")), pt = void 0, F = function() { var t, e; return console.log("initDetails"), t = d3.select("#details #historic .plot"), M = t.append("svg").attr({ width: 2 * a, height: o }), pt = M.append("g").classed("axis", !0).attr({ transform: "translate(28,0)" }).call(ht), M.append("rect.mid-range-marker").attr({ width: a - 70, x: 32 }), e = d3.select("#details #predictions .plot"), H = e.append("svg").attr({ width: a, height: o }), H.append("rect.mid-range-marker").attr({ width: 6, x: a - 160 }), $("body").trigger("resize") }, E = function(t, e, n) { var i, r, s, c, d, u, h, p, f, m, g, v, y, w; return t ? ($("#details").slideDown(300), d3.select(".leaflet-top").transition().style("margin-bottom", "190px").duration(300), d3.select("#skill .number").text(Y(t.RPSS)), d3.select("#skill .bar").style({ right: 100 * (1 - t.RPSS) + "%" }), d3.select("#power .number").text((d3.format("0,000")(t.power) || 0) + " KW"), f = n.predictions, h = n.observations, i = f.concat(h), w = d3.scale.linear().domain([0, h.length - 1]).range([40, a - 60]), ft = d3.scale.linear().domain(d3.extent(i)).range([o - 50, 20]).nice(4), ht.scale(ft), pt.transition().call(ht), r = M.selectAll(".dot").data(h), d = d3.median(h), m = d3.scale.quantile().domain(h).range([0, 1, 2]).quantiles(), r.enter().append("circle.dot").translate(function(t, e) { return [w(e), o] }).attr({ r: 2.5 }), r.classed({ upper: function(t) { return t > m[1] }, lower: function(t) { return t < m[0] }, mid: function(t) { return m[1] >= t && t >= m[0] } }).transition().delay(function(t, e) { return 5 * e }).translate(function(t, e) { return [w(e), ft(t)] }), r.on("mouseover", function(t, e) { return tt("Seasonal average wind speed in " + l[e] + ": " + t.toFixed(1) + " m/s") }), r.on("mouseout", function(t) { return x() }), u = ft(d), d3.select(".historic-mean").transition().style("bottom", o - u + 30 + "px"), d3.select(".historic-mean span").text(d.toFixed(1)), g = M.select("rect.mid-range-marker"), g.transition().attr({ height: ft(m[0]) - ft(m[1]), y: ft(m[1]) }), v = M.select("text.mean"), v.text(d.toFixed(1)), v.transition().translate([0, ft(d) - 5]), w = d3.scale.linear().domain([0, f.length]).range([a / 2, a]), r = H.selectAll(".dot").data(f), s = r.enter().append("circle.dot").translate(function(t, e) { return [w(e), o] }).attr({ r: 2 }), r.on("mouseover", function(t, e) { return tt("Prediction number " + (e + 1) + " for " + window.CONFIG.predictionSeason + ":<br/> " + t.toFixed(1) + " m/s") }), r.on("mouseout", function(t) { return x() }), r.classed({ upper: function(t) { return t > m[1] }, lower: function(t) { return t < m[0] }, mid: function(t) { return m[1] >= t && t >= m[0] } }), p = [_.filter(f, function(t) { return t > m[1] }).length / f.length, _.filter(f, function(t) { return m[1] >= t && t >= m[0] }).length / f.length, _.filter(f, function(t) { return t < m[0] }).length / f.length], c = d3.max(p), d3.selectAll(".percentile").data(p).classed({ "most-probable": function(t) { return t === c } }).style({ opacity: function(t) { return Math.max(.3, 3 * t) } }).select(".number").text(function(t) { return Y(t) }), y = function(t, e) { return a - 290 + 80 * Math.cos(Math.PI * ((ft(t) - u) / o)) + e / 2 }, r.transition().delay(function(t, e) { return 5 * e }).translate(function(t, e) { return [y(t, e), ft(t)] }), r = H.selectAll(".ray").data(f), s = r.enter().append("line.ray"), r.classed({ upper: function(t) { return t > m[1] }, lower: function(t) { return t < m[0] }, mid: function(t) { return m[1] >= t && t >= m[0] } }), r.on("mouseover", function(t, e) { return tt("Prediction number " + (e + 1) + " for " + window.CONFIG.predictionSeason + ":<br/> " + t.toFixed(1) + " m/s") }), r.on("mouseout", function(t) { return x() }), r.transition().attr({ x1: -20, y1: u }).delay(function(t, e) { return 5 * e }).attr({ x2: function(t, e) { return y(t, e) }, y2: function(t, e) { return ft(t) } }), g = H.select("rect.mid-range-marker"), g.transition().attr({ height: ft(m[0]) - ft(m[1]), y: ft(m[1]) }), d3.selectAll(".percentiles").transition().style({ top: (ft(m[1]) + ft(m[0])) / 2 - 39 + "px" })) : ($("#details").slideUp(300), void d3.select(".leaflet-top").transition().style("margin-bottom", "0px").duration(300)) }, Y = function(t) { return (100 * t).toFixed(1) + "%" }, g = function(t, e) { var n, o, i, r, a, l; for (n = null, o = 1e5, a = 0, l = ut.length; a < l; a++) i = ut[a], i.data.RPSS > 0 && (r = Math.pow(t - i.point.x, 2) + Math.pow(e - i.point.y, 2), r < o && (n = i, o = r)); return n }, R = function(t) { for (; t < -180;) t += 360; for (; t > 180;) t -= 360; return t }, N = function(t) { for (; t < -90;) t += 180; for (; t > 90;) t -= 180; return t }, v = function(t) { var e, n, o, i, r, a, l, s, c, u, h, p, f, m, g, v, y, w; if (y = [], o = t.getWest(), i = t.getEast(), r = Math.abs(t.getWest() - t.getEast()), l = a = 0, o < -180)
            for (s = o; s < -180;) s += 360, l -= 360;
        else if (o > 180)
            for (s = o; s > 180;) s -= 360, l += 360; if (i < -180)
            for (s = i; s < -180;) s += 360, a -= 360;
        else if (i > 180)
            for (s = i; s > 180;) s -= 360, a += 360; for (c = N(t.getNorth()), u = N(t.getSouth()), p = 0, m = d.length; p < m; p++)
            if (w = d[p], e = null != (v = w[0]) ? v.lon : void 0, (Math.abs(e + a - o) < r || Math.abs(e + l - o) < r) && (Math.abs(e + l - i) < r || Math.abs(e + a - i) < r))
                for (f = 0, g = w.length; f < g; f++)
                    if (h = w[f], !(h.lat < u)) { if (h.lat > c) break; for (n = T.latLngToContainerPoint(h.loc); n.x > 4096;) n.x -= 4096; for (; n.x < 0;) n.x += 4096;
                        y.push({ point: n, data: h }) }
        return y }, rt = d3.select(".mousetip"), it = d3.select(".mousetip .tip"), b = null, tt = function(t, e, n) { return null == e && (e = 0), null == n && (n = 0), it.html(t), it.transition().style({ opacity: 1, visibility: "visible" }).delay(e), clearInterval(b), n && (b = setTimeout(function() { return x() }, n)), d3.select("body").on("mousemove", function(t) { var e; return e = d3.mouse(this), rt.style({ left: e[0] + "px", top: e[1] + "px" }) }) }, x = function() { return clearInterval(b), it.transition().style("opacity", 0), d3.select("body").on("mousemove", null) }, y = function(t) { var e, n; return n = Math.max(0, Math.min(1, Math.abs(t))), e = t > 0 ? lt(n) : m(n), e.toString() }, B = function(t, e, n, o, i) { var r, a, l, s, c, d; return d = Math.sqrt(o / X) * i * 5, c = .5 * -Math.PI, r = 2 * Math.PI, s = .015 * r, a = Math.min(1, .5 + .8 * Math.sqrt(o / X)), t.moveTo(e, n), t.beginFill(16777215), t.lineStyle(0), l = c, t.lineTo(e + Math.cos(l - s) * d, n + Math.sin(l - s) * d), t.lineTo(e + Math.cos(l + s) * d, n + Math.sin(l + s) * d), t.moveTo(e, n), t.endFill(), t.moveTo(e, n), t.beginFill(16777215), t.lineStyle(0), l = c + .33 * r, t.lineTo(e + Math.cos(l - s) * d, n + Math.sin(l - s) * d), t.lineTo(e + Math.cos(l + s) * d, n + Math.sin(l + s) * d), t.endFill(), t.moveTo(e, n), t.beginFill(16777215), t.lineStyle(0), l = c + .66 * r, t.lineTo(e + Math.cos(l - s) * d, n + Math.sin(l - s) * d), t.lineTo(e + Math.cos(l + s) * d, n + Math.sin(l + s) * d), t.endFill(), t.moveTo(e, n), t.beginFill(16777215), t.lineStyle(.08 * d, 3355443), t.drawCircle(e, n, .15 * d), t.endFill() }, V = function(t, e, n, o, i, a, l, c) { var d, u, h, p, f, m, g, v, w; if (null == c && (c = !1), o > 0) return d = s(o), "trend" === r.mode ? (h = parseInt(y(10 * i).replace("#", "0x")), c && (h = 16777215), u = 300 * -i, u = Math.min(45, u), u = Math.max(-45, u), u = Math.PI * u / 180) : (h = 16777215, u = 0), p = Math.cos(u + Math.PI / 2) * a * l * .05, f = Math.sin(u + Math.PI / 2) * a * l * .05, m = e - Math.cos(u) * l, v = n - Math.sin(u) * l, g = e + Math.cos(u) * l, w = n + Math.sin(u) * l, t.lineStyle(0), t.beginFill(h, d), t.moveTo(m - p, v - f), t.lineTo(g - p, w - f), t.lineTo(g + p, w + f), t.lineTo(m + p, v + f), t.endFill() }, p = { mode: "trend", mask_oceans: !1, show_windpower: !0, high_contrast: !1 }, dt = { mode: ["trend", "skill", "strength"], mask_oceans: [!0, !1], show_windpower: [!0, !1], high_contrast: [!0, !1] }, r = _.clone(p), window.onhashchange = function() { return J() }, J = function() { var t, e, n, o, i, a, l, s, c; for (console.log("hashchange", document.location.hash), t = document.location.hash.replace("#", "").split("&"), i = _.clone(p), a = function() { var e, n, o; for (o = [], e = 0, n = t.length; e < n; e++) c = t[e], o.push(c.split("=")); return o }(), e = 0, o = a.length; e < o; e++) l = a[e], n = l[0], s = l[1], "true" === s && (s = !0), "false" === s && (s = !1), dt[n] && mt.call(dt[n], s) >= 0 && (i[n] = s); return r = i, D() }, D = function() { return ct(), U() }, k = function() { return $(".collapsible h3").click(function() { return $(this).parent().toggleClass("collapsed") }), $(".mode a").click(function() { return r.mode = d3.select(this).attr("data-mode"), st(r), !1 }), d3.selectAll("input[type=checkbox]").on("change", function() { var t; return t = d3.select(this).attr("name"), r[t] = d3.select(this).property("checked"), st(r), !1 }), ct() }, st = function() { var t, e, n;
        t = []; for (e in r) n = r[e], n !== p[e] && t.push(e + "=" + n); return t = "#" + t.join("&"), document.location.hash = t }, ct = function() { return d3.selectAll(".mode a").classed("selected", function() { return d3.select(this).attr("data-mode") === r.mode }), d3.selectAll("input[type=checkbox]").property("checked", function() { return r[d3.select(this).attr("name")] }), d3.select("#windpower_legend").style("display", r.show_windpower ? "block" : "none"), d3.select("#change_legend").style("display", "trend" === r.mode ? "block" : "none") } }).call(this);